# Generated by Django 5.2.4 on 2025-08-01 05:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the asset type (e.g., UPS, Generator, IAC)', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='A brief description of this asset type')),
            ],
            options={
                'verbose_name': 'Asset Type',
                'verbose_name_plural': 'Asset Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the manufacturer (e.g., APC, Caterpillar, Schneider)', max_length=100, unique=True)),
                ('website', models.URLField(blank=True, help_text='Official website of the manufacturer', null=True)),
                ('support_contact', models.CharField(blank=True, help_text='Support contact information (email or phone)', max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_tag', models.CharField(help_text='Unique identifier for the asset (e.g., UPS-001)', max_length=100, unique=True)),
                ('serial_number', models.CharField(blank=True, help_text="Manufacturer's serial number", max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Common name or hostname of the asset', max_length=255)),
                ('model_number', models.CharField(blank=True, help_text="Manufacturer's model number", max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('decommissioned', 'Decommissioned'), ('standby', 'Standby'), ('faulty', 'Faulty')], default='active', help_text='Current operational status', max_length=20)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', help_text='Business priority level', max_length=20)),
                ('purchase_date', models.DateField(blank=True, help_text='Date when asset was purchased', null=True)),
                ('installation_date', models.DateField(blank=True, help_text='Date when asset was installed', null=True)),
                ('warranty_expiry', models.DateField(blank=True, help_text='Warranty expiration date', null=True)),
                ('last_maintenance', models.DateField(blank=True, help_text='Date of last maintenance', null=True)),
                ('next_maintenance', models.DateField(blank=True, help_text='Scheduled next maintenance date', null=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the asset')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Employee responsible for this asset', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_assets', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(help_text='Physical location of the asset', on_delete=django.db.models.deletion.PROTECT, to='users.location')),
                ('asset_type', models.ForeignKey(help_text='Type of asset', on_delete=django.db.models.deletion.PROTECT, to='assets.assettype')),
                ('manufacturer', models.ForeignKey(help_text='Asset manufacturer', on_delete=django.db.models.deletion.PROTECT, to='assets.manufacturer')),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
                'ordering': ['asset_tag'],
            },
        ),
        migrations.CreateModel(
            name='AssetLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('created', 'Asset Created'), ('updated', 'Asset Updated'), ('status_change', 'Status Changed'), ('assignment_change', 'Assignment Changed'), ('maintenance_scheduled', 'Maintenance Scheduled'), ('maintenance_completed', 'Maintenance Completed'), ('incident_reported', 'Incident Reported'), ('specification_updated', 'Specification Updated')], max_length=30)),
                ('description', models.TextField(help_text='Description of what happened')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('old_value', models.CharField(blank=True, help_text='Previous value (for updates)', max_length=255)),
                ('new_value', models.CharField(blank=True, help_text='New value (for updates)', max_length=255)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='assets.asset')),
                ('user', models.ForeignKey(help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Asset Log',
                'verbose_name_plural': 'Asset Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('preventive', 'Preventive Maintenance'), ('corrective', 'Corrective Maintenance'), ('emergency', 'Emergency Maintenance'), ('inspection', 'Inspection'), ('calibration', 'Calibration')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('scheduled_date', models.DateField(help_text='When maintenance is scheduled')),
                ('performed_date', models.DateField(blank=True, help_text='When maintenance was actually performed', null=True)),
                ('description', models.TextField(help_text='Description of maintenance work')),
                ('work_performed', models.TextField(blank=True, help_text='Detailed description of work performed')),
                ('parts_used', models.TextField(blank=True, help_text='Parts or materials used')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, help_text='Cost of maintenance', max_digits=10, null=True)),
                ('estimated_duration', models.DurationField(blank=True, help_text='Estimated time for maintenance', null=True)),
                ('actual_duration', models.DurationField(blank=True, help_text='Actual time taken', null=True)),
                ('next_maintenance_date', models.DateField(blank=True, help_text='When next maintenance should be scheduled', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or observations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='assets.asset')),
                ('performed_by', models.ForeignKey(blank=True, help_text='Who performed the maintenance', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_maintenance', to=settings.AUTH_USER_MODEL)),
                ('scheduled_by', models.ForeignKey(help_text='Who scheduled this maintenance', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_maintenance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='AssetSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification_name', models.CharField(help_text="Name of the specification (e.g., 'Power Rating', 'Fuel Capacity')", max_length=100)),
                ('specification_value', models.CharField(help_text="Value of the specification (e.g., '600 kVA', '1000 Liters')", max_length=255)),
                ('unit', models.CharField(blank=True, help_text="Unit of measurement (e.g., 'kVA', 'Liters', 'Celsius')", max_length=50)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='assets.asset')),
            ],
            options={
                'ordering': ['specification_name'],
                'unique_together': {('asset', 'specification_name')},
            },
        ),
    ]
